---
export async function getStaticPaths() {
	//Fetch database info
  const data = await fetch(
    "https://hnrcndxoquhelmpaqheh.supabase.co/rest/v1/uxcopenhagen", {
	method: "GET",
	headers: {
	apikey: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImhucmNuZHhvcXVoZWxtcGFxaGVoIiwicm9sZSI6ImFub24iLCJpYXQiOjE2OTM4MjI5MTksImV4cCI6MjAwOTM5ODkxOX0.Kj0vgWH3imfxSBjrhKN9746mppt3v9ldhd1y2ugyfyc"
	},
	//parse to json
}).then(response => response.json());
	//function to create static path based on ticketurl value in database
  return data.map((data) => {
    return {
      params: { ticketurl: data.ticketurl },
      props: { data },
    };
  });
}

const { data } = Astro.props;
//console.log(data);
import '../../style.css'; 
import Ticket from "../../components/Ticket.astro";
import Layout from "../../layouts/Layout.astro";
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import Ticketmain from '../../components/Ticketmain.astro';
import Button from '../../components/Button.astro';
import Watermark from '../../components/Watermark.astro';
const price = data.price;
---







<Layout title={data.title}>
  <Header />
  <Watermark />
  <section class="ticket-container">
    <article class="row">
      <Ticketmain data={data}/>
    </article>
    <article class="row">
		<h1><span class="highlight">UX Copenhagen 2024 </span>“Consumerism & Degrowth”: {data.title}</h1>
		<div set:html={data.ticket_page_content} class="ticket-body">
			<!-- 
			<h4>Tickets include:</h4>
			<ul>

				<li>Full access to the recording of the 2023 conference </li>
				<li>Access to all talks  </li>
				<li>Q&A sessions  </li>
				<li>Recordings of 2-3 of the workshops for a discounted price </li>
				

			</ul>
			<p>Please note that the livestream ticket is not refundable</p>-->
		</div>
		<div class="price-and-pay">
			<p>Price:</p>
			<h3>DKK: {data.price}</h3>
			<div class="counter">
				<button id="decrement">-</button>
				<p id="count">0</p>
				<button id="increment">+</button>
			</div>
			<script is:inline>
				const price = {price};
				const decrement = document.querySelector("#decrement");
				const increment = document.querySelector("#increment");
				const count = document.querySelector('#count');
				
				decrement.addEventListener('click', () => {
    			const countValue = parseInt(count.innerText)
    			const changeByValue = parseInt(price.value)
    			count.innerText = countValue - changeByValue
				console.log("decre clicked");
			})			
			
				increment.addEventListener('click', () => {
    			const countValue = parseInt(count.innerText)
    			const changeByValue = parseInt(price.value)
    			count.innerText = countValue + changeByValue
			})
			</script>

			<Button href="#" variant="filled">Add to Card</Button>
		</div>
	</article>
  </section>

  <section class="desc-container">
    <div  id="desc-container-left">
		<h2>Description</h2>
		<p>
			{data.ticket_page_description_p1}
			</p>
	</div>
    <div id="disc-container-right">
		<p>{data.ticket_page_description_p2}</p>
	</div>

  </section>


  <section class="pricing">
    <div class="pricing-container">
		<p>Pricing: <br>
		Early Bird: September 1 - November 15
		Regular price: November 16 - January 31
		Late Bird: (does not apply to live-stream tickets)
		</p>
	</div>
    
  </section>
  	<div class="terms">
		<p>*Rules apply, please refer to our Terms & Conditions: https://uxcopenhagen.com/terms-and-conditions.</p>
	</div>
<!-- 
  {
    [data].map((data)=> {
      return <Ticket data={data} />
    })
  } 
  -->
  <Footer />
</Layout>

<style>
	:root {
		--from-top: 160px;
	}
	
@media (min-width: 768px) {
   	.ticket-container {
		position: relative;
    	display: grid;  
		max-width: 1280px;
		margin: auto;
		margin-top: var(--from-top);
		grid-template-columns: 1fr 1fr;
		place-items: center;
	
   }
    .row {
		display: flex;
		flex-direction: column;
		align-items: flex-start;
		justify-content: center;
		padding: 15px;
   }
   .row h1 {
		font-size: 2.2vw;
		line-height: 5vh;
   }
   	.price-and-pay {
		display: flex;
		flex-direction: column;
		justify-content: center;
		align-items: left;
		place-self: left;
   }
   .price-and-pay > * {
		margin: 5px;
   }
   .desc-container {
		position: relative;
		display: flex;
		max-width: 1280px;
		margin: 0 auto;
		margin-top: calc(var(--from-top));
   }
   .desc-container > * {
		padding: 45px;
   }
   .pricing {
		position: relative;
		max-width: 600px;
		margin: 0 auto;
		margin-top: calc(var(--from-top));
		padding: 55px;
		border-radius: 10px;
		background: linear-gradient(68deg, rgba(248, 240, 234, 0.80) 31.32%, rgba(170, 182, 194, 0.80) 92.22%);
		
   }
   .pricing p {
		color: #083862;
		line-height: 45px;
   }
   .terms {
		max-width: 300px;
		margin: 15px auto;
   }
   .terms p {
		font-size: 12px;
   }
  }
  	.counter {
		display: flex;
		gap: 15px;
		padding: 5px;
		border-radius: 10px;
		justify-content: center;
		align-items: center;
		margin: 5px;

  }
  	button {
		position: relative;
		display: flex;
		justify-content: center;
		align-items: center;
		color: white;
		width: 25%;
		aspect-ratio: 1/1;
		border: 0;
		padding: 0.3rem;
		border-radius: 5px;
		font-size: 18px;
		background-color: transparent;
		border: 0.5px solid var(--accent-orange) ;
		transition: all 300ms ease;
		cursor: pointer;
  }	

  	button:hover {
		background-color: #083862;
	}

</style>